#!/bin/bash

set +e

#-----------------------------------------------------------------------------

readonly program=$(basename $0)

#-----------------------------------------------------------------------------

error ()
{
	echo "$program: $*" >&2
	exit 1
}

#-----------------------------------------------------------------------------

getopt -T &>/dev/null

[ $? -eq 4 ] || error "getopt is too old"

#-----------------------------------------------------------------------------

getopt_result=$(eval $(tr -d '\n' <<END
getopt
 --name $program
 --options f:hl:
 --longoptions
 file-extension:,
help,
list-extension:
 --
 $*
END
)) || error "failed parsing options. Run $program -h for more information."

eval set -- $getopt_result

#-----------------------------------------------------------------------------

file_ext=.tst
help=false
list_ext=.lst

dirs=(.)
globs=()

while true
do
	[ $# -gt 0 ] || error "internal error parsing arguments." \
	          "getopt should return \"--\" at the end of its result."

    case "$1" in
    -f | --file-extension ) file_ext="$2" ; shift 2 ;;
    -h | --help           ) help=true     ; shift   ;;
    -l | --list-extension ) list_ext="$2" ; shift 2 ;;
    -- ) shift ; break ;;
    *  )
	     echo "$program: internal error parsing argument \"$1\"." \
	          "getopt should check the options earlier." >&2

	     exit 1
         ;;
    esac
done

#-----------------------------------------------------------------------------

while [ $# -gt 0 ]
do
	if [ -d "$1" ]
	then
		echo dir
		dirs+=($1)
	else
	    globs+=($1)
	fi

	shift
done



echo A ${dirs[@]}
echo B ${globs[@]}
echo C "${dirs[@]}"
echo D "${globs[@]}"
exit
